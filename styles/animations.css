/* 
 * 优化的 CSS 动画
 * 使用 transform 和 opacity 属性，确保动画可以被合成
 */

/* 淡入动画 */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* 从下淡入动画 */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* 从上淡入动画 */
@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* 从左淡入动画 */
@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* 从右淡入动画 */
@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* 缩放淡入动画 */
@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* 脉冲动画 */
@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

/* 动画工具类 */
.animate-fade-in {
  animation: fadeIn 0.5s ease forwards;
  will-change: opacity;
}

.animate-fade-in-up {
  animation: fadeInUp 0.5s ease forwards;
  will-change: transform, opacity;
}

.animate-fade-in-down {
  animation: fadeInDown 0.5s ease forwards;
  will-change: transform, opacity;
}

.animate-fade-in-left {
  animation: fadeInLeft 0.5s ease forwards;
  will-change: transform, opacity;
}

.animate-fade-in-right {
  animation: fadeInRight 0.5s ease forwards;
  will-change: transform, opacity;
}

.animate-scale-in {
  animation: scaleIn 0.5s ease forwards;
  will-change: transform, opacity;
}

.animate-pulse-subtle {
  animation: pulse 2s ease-in-out infinite;
  will-change: transform;
}

/* 动画延迟类 */
.delay-100 {
  animation-delay: 0.1s;
}

.delay-200 {
  animation-delay: 0.2s;
}

.delay-300 {
  animation-delay: 0.3s;
}

.delay-400 {
  animation-delay: 0.4s;
}

.delay-500 {
  animation-delay: 0.5s;
}

/* 动画持续时间类 */
.duration-300 {
  animation-duration: 0.3s;
}

.duration-500 {
  animation-duration: 0.5s;
}

.duration-700 {
  animation-duration: 0.7s;
}

.duration-1000 {
  animation-duration: 1s;
}

/* 动画填充模式 */
.fill-forwards {
  animation-fill-mode: forwards;
}

/* 动画缓动函数 */
.ease-out {
  animation-timing-function: ease-out;
}

.ease-in-out {
  animation-timing-function: ease-in-out;
}

/* 视口内动画类 */
.animate-on-scroll {
  opacity: 0;
  transition: opacity 0.6s ease, transform 0.6s ease;
  will-change: transform, opacity;
}

.animate-on-scroll.fade-in {
  opacity: 0;
}

.animate-on-scroll.fade-in.visible {
  opacity: 1;
}

.animate-on-scroll.fade-in-up {
  opacity: 0;
  transform: translateY(20px);
}

.animate-on-scroll.fade-in-up.visible {
  opacity: 1;
  transform: translateY(0);
}

.animate-on-scroll.fade-in-down {
  opacity: 0;
  transform: translateY(-20px);
}

.animate-on-scroll.fade-in-down.visible {
  opacity: 1;
  transform: translateY(0);
}

.animate-on-scroll.fade-in-left {
  opacity: 0;
  transform: translateX(-20px);
}

.animate-on-scroll.fade-in-left.visible {
  opacity: 1;
  transform: translateX(0);
}

.animate-on-scroll.fade-in-right {
  opacity: 0;
  transform: translateX(20px);
}

.animate-on-scroll.fade-in-right.visible {
  opacity: 1;
  transform: translateX(0);
}

.animate-on-scroll.scale-in {
  opacity: 0;
  transform: scale(0.9);
}

.animate-on-scroll.scale-in.visible {
  opacity: 1;
  transform: scale(1);
}
